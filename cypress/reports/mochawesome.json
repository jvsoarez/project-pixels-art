{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-09-29T17:24:23.022Z",
    "end": "2022-09-29T17:25:43.832Z",
    "duration": 80810,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2f35cce5-dea3-48e5-ab56-12de24d4f967",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e94a743b-7eff-4d65-83d8-02d98a58bbb0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "1baf6373-0cce-4382-a821-2a4b318caec9",
              "parentUUID": "e94a743b-7eff-4d65-83d8-02d98a58bbb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1baf6373-0cce-4382-a821-2a4b318caec9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2adefaf-506c-4d13-977e-e69732aea37d",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "f342b816-2c0e-4282-8d5c-d2090d15ab0d",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0eaa7da0-f24e-4dcf-8ee6-c07f5ea951d0",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b2f22238-9a88-4319-9f27-e4ec5ec16301",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3f552eb4-c158-4cae-bd41-c9aa4b8f61f4",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1f37def2-4db1-40fd-9c93-b388d2966d4b",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "5bdeb36c-13bb-4db4-a903-8b7c12f95e96",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f0b1dd37-8843-4936-9945-cd99cb7e01c3",
              "parentUUID": "f2adefaf-506c-4d13-977e-e69732aea37d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f342b816-2c0e-4282-8d5c-d2090d15ab0d",
            "0eaa7da0-f24e-4dcf-8ee6-c07f5ea951d0",
            "b2f22238-9a88-4319-9f27-e4ec5ec16301",
            "3f552eb4-c158-4cae-bd41-c9aa4b8f61f4",
            "1f37def2-4db1-40fd-9c93-b388d2966d4b",
            "5bdeb36c-13bb-4db4-a903-8b7c12f95e96",
            "f0b1dd37-8843-4936-9945-cd99cb7e01c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 725,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69d8ce16-eb2c-42f7-92f9-023241aa6300",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1765b1b3-7646-4a58-89cd-e11c97d5a152",
              "parentUUID": "69d8ce16-eb2c-42f7-92f9-023241aa6300",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "a45b0788-c925-409d-9a7e-a2a5789cc34c",
              "parentUUID": "69d8ce16-eb2c-42f7-92f9-023241aa6300",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1765b1b3-7646-4a58-89cd-e11c97d5a152",
            "a45b0788-c925-409d-9a7e-a2a5789cc34c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38f1a5ee-6c71-465c-996c-65a54711f266",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "004aa32e-c442-4b31-bdfc-6ad79b84f57f",
              "parentUUID": "38f1a5ee-6c71-465c-996c-65a54711f266",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "75c88bf0-de1b-4099-be7d-384a0405c11e",
              "parentUUID": "38f1a5ee-6c71-465c-996c-65a54711f266",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8c3dbf67-79e6-4d66-9f0f-5fe06012035f",
              "parentUUID": "38f1a5ee-6c71-465c-996c-65a54711f266",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a25485c7-741c-49e7-bbd6-6cae8a4a2b49",
              "parentUUID": "38f1a5ee-6c71-465c-996c-65a54711f266",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "004aa32e-c442-4b31-bdfc-6ad79b84f57f",
            "75c88bf0-de1b-4099-be7d-384a0405c11e",
            "8c3dbf67-79e6-4d66-9f0f-5fe06012035f",
            "a25485c7-741c-49e7-bbd6-6cae8a4a2b49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 408,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "759faa01-a383-42f5-9abc-719970fbe752",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8b4d9206-dde8-4359-ab86-895509667f05",
              "parentUUID": "759faa01-a383-42f5-9abc-719970fbe752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "75832d92-b95b-480e-877a-244fc152b0d6",
              "parentUUID": "759faa01-a383-42f5-9abc-719970fbe752",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b4d9206-dde8-4359-ab86-895509667f05",
            "75832d92-b95b-480e-877a-244fc152b0d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 472,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f3f91fb-9275-4a21-abd9-f09dc1e375a8",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "e300517f-3ba9-495d-b676-5b7ed17d6f06",
              "parentUUID": "9f3f91fb-9275-4a21-abd9-f09dc1e375a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "6e102b80-9412-4423-adf4-b425849365b1",
              "parentUUID": "9f3f91fb-9275-4a21-abd9-f09dc1e375a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e300517f-3ba9-495d-b676-5b7ed17d6f06",
            "6e102b80-9412-4423-adf4-b425849365b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e73535c-2aa8-4bcb-9b2f-73ec238fbe46",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "e260f38e-c80f-4e81-af82-a77169413596",
              "parentUUID": "8e73535c-2aa8-4bcb-9b2f-73ec238fbe46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2323026b-a827-44f3-9762-9bd6a68c0298",
              "parentUUID": "8e73535c-2aa8-4bcb-9b2f-73ec238fbe46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e260f38e-c80f-4e81-af82-a77169413596",
            "2323026b-a827-44f3-9762-9bd6a68c0298"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b24e431b-1f8e-497a-88a6-c39c9e48a139",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "248ebb20-bfaf-4b84-ab86-7b4eadd78cb7",
              "parentUUID": "b24e431b-1f8e-497a-88a6-c39c9e48a139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "7d5943fa-3897-48bf-94e0-1d1bd19f4494",
              "parentUUID": "b24e431b-1f8e-497a-88a6-c39c9e48a139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "319cab66-3736-47f8-a1f3-667faa974183",
              "parentUUID": "b24e431b-1f8e-497a-88a6-c39c9e48a139",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "248ebb20-bfaf-4b84-ab86-7b4eadd78cb7",
            "7d5943fa-3897-48bf-94e0-1d1bd19f4494",
            "319cab66-3736-47f8-a1f3-667faa974183"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12891,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5be8f4ba-039e-4507-9b88-7e80f4f02220",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e3f9e00b-32be-4b06-a5bc-d06435d5ae1d",
              "parentUUID": "5be8f4ba-039e-4507-9b88-7e80f4f02220",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "83a76562-a976-4a79-a3b0-18a767a871cf",
              "parentUUID": "5be8f4ba-039e-4507-9b88-7e80f4f02220",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4e5dbf4e-351c-4f1d-8718-ae859d28ac1b",
              "parentUUID": "5be8f4ba-039e-4507-9b88-7e80f4f02220",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ae6544db-783a-4aa9-b735-7f3cc819598d",
              "parentUUID": "5be8f4ba-039e-4507-9b88-7e80f4f02220",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3f9e00b-32be-4b06-a5bc-d06435d5ae1d",
            "83a76562-a976-4a79-a3b0-18a767a871cf",
            "4e5dbf4e-351c-4f1d-8718-ae859d28ac1b",
            "ae6544db-783a-4aa9-b735-7f3cc819598d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2756,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "71f8fb91-fd22-484e-9374-ebba81ef67dc",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6fb52041-3fbc-40c3-ae86-5c50038ff602",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c4870df7-a38b-4cf2-a7ba-b9eabdbfcdd3",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "65c0e565-56ec-485f-ba53-d79571ea5e60",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e7ad8973-b890-4b00-8304-71d1833f196d",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfb2afd3-aeaf-4e54-89e3-b2b4f493f752",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "04dc52bd-3f75-49ca-b50d-7025b7c3d515",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "da30741e-ff3f-4ddf-850b-5013d66ce620",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06f0e38f-6089-4851-b730-4ff761a58a3f",
              "parentUUID": "a7d450f8-549d-4b8f-aa1f-3ded87cd069f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "71f8fb91-fd22-484e-9374-ebba81ef67dc",
            "6fb52041-3fbc-40c3-ae86-5c50038ff602",
            "c4870df7-a38b-4cf2-a7ba-b9eabdbfcdd3",
            "65c0e565-56ec-485f-ba53-d79571ea5e60",
            "e7ad8973-b890-4b00-8304-71d1833f196d",
            "cfb2afd3-aeaf-4e54-89e3-b2b4f493f752",
            "04dc52bd-3f75-49ca-b50d-7025b7c3d515",
            "da30741e-ff3f-4ddf-850b-5013d66ce620",
            "06f0e38f-6089-4851-b730-4ff761a58a3f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e32496d-5acd-46a2-b23e-edbafdbba92a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b5979ed0-38c7-4c49-b1d7-e57e1b1b4050",
              "parentUUID": "9e32496d-5acd-46a2-b23e-edbafdbba92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4288,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8ff4b58d-6621-4891-bb35-f2d9cf54e424",
              "parentUUID": "9e32496d-5acd-46a2-b23e-edbafdbba92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43609/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43609/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43609/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43609/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43609/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43609/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1eff319e-019a-4c88-aecd-2760443df829",
              "parentUUID": "9e32496d-5acd-46a2-b23e-edbafdbba92a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b5979ed0-38c7-4c49-b1d7-e57e1b1b4050",
            "8ff4b58d-6621-4891-bb35-f2d9cf54e424",
            "1eff319e-019a-4c88-aecd-2760443df829"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96aaaae7-0a2a-4c37-b85c-6368f4245ea1",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 344,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:43609/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:43609/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:43609/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:43609/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:43609/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:43609/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:43609/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "aea8d54a-87d4-458c-97ce-4a5f5ab0224c",
              "parentUUID": "96aaaae7-0a2a-4c37-b85c-6368f4245ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 367,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:43609/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:43609/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:43609/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:43609/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:43609/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:43609/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:43609/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43609/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43609/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:43609/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43609/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43609/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0c58bcb1-8401-4300-bbb5-7d2d804c1272",
              "parentUUID": "96aaaae7-0a2a-4c37-b85c-6368f4245ea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aea8d54a-87d4-458c-97ce-4a5f5ab0224c",
            "0c58bcb1-8401-4300-bbb5-7d2d804c1272"
          ],
          "pending": [],
          "skipped": [],
          "duration": 711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}